<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context 
	   http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 
		xml파일
		IOC 컨테이너 안에 적재될 bean 객체 생성과 injection(DI)
		
		<bean id="emp"
		<bean name="emp, emp2, emp3"
		
		id속성, name 속성: 객체의 이름(식별자)
		
		********************************************
		springmvc로 오면 id, name 속성이 (mapping)주소로 변경
		
		id, name => url_pattern
		
		<bean id="/hello.do" class="BoardController..
		
		id="/hello.htm" >> mapping 주소로 사용
		
		순서: tomcat 실행>> *.do 요청 >> DispatcherServlet 객체 생성 >> IOC 컨테이너 생성
		>>spring-servlet.xml read>>bean 객체 생성, injection >>
		>> 들어온 주소가 예) intro.do라면 ..handler mapping ..id값으로 controller 찾고
		>> controller 가지고 있는 handleRequest 함수가 자동 실행 >> view 처리
	
	 -->
	<bean id="/hello.do" class="kr.or.bit.HelloController"></bean>
	<bean id="/intro.do" class="kr.or.bit.IntroController"></bean>
	<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	
	</bean>


	   
</beans>


















